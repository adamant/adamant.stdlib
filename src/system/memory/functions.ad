namespace system.memory;

// TODO fn copy_memory()

// TODO fn move_memory()

public unsafe fn write_bytes(destination: @any, value: byte, byte_count: size) -> void
    // TODO requires destination+byte_count doesn't overflow
{
    // TODO improve performance
    // TODO use llvm intrinsic
    // Using while loop for gaurenteed peformance
    var current = unsafe(destination as @byte);
    var end = current + byte_count;
    while(current < end)
    {
        unsafe(^current = value);
        current += 1;
    }
}

#Inline
public unsafe fn zero(destination: @any, byte_count: size) -> void
    // TODO requires destination+byte_count doesn't overflow
{
    unsafe(write_bytes(destination, 0, byte_count));
}

#Inline
public unsafe fn zeroed[T]() -> T
    where T: struct
{
    var value: T = uninitialized;
    zero(@value, sizeof[T]);
    return value;
}


